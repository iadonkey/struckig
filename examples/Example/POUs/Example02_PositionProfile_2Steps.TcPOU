<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Example02_PositionProfile_2Steps" Id="{9bcc5091-27e8-40b3-85e4-3119402a5bb6}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Example02_PositionProfile_2Steps
VAR
  ruckig : Ruckig(0.001);
  input_step1 : InputParameter(1) := (Synchronization := SynchronizationType.None,
                                      MaxVelocity :=         [ 1200.0 ],
                                      MaxAcceleration :=     [ 25000.0 ],
                                      MaxJerk :=             [ 25000.0 / 0.008 ],
                                      CurrentPosition :=     [ 47.0 ],
                                      CurrentVelocity :=     [ 0.0 ],
                                      CurrentAcceleration := [ 0.0 ],
                                      TargetPosition :=      [ 18.0 ],
                                      TargetVelocity :=      [ -10.0 ],
                                      TargetAcceleration :=  [ 0.0 ]);
  input_step2 : InputParameter(1) := (MaxVelocity :=         [ 10.0 ], // limit velocity to end-velocity of first step
                                      TargetPosition :=      [ 9.0 ],
                                      TargetVelocity :=      [ 0.0 ],
                                      TargetAcceleration :=  [ 0.0 ]);
  input : REFERENCE TO InputParameter REF= input_step1;                                    
  output : OutputParameter;    
  run : BOOL;
  switched : BOOL;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF run
THEN
  ;
  
  // switch to second profile
  IF ruckig.update(input, output) = Struckig.TrajectoryState.Idle AND_THEN NOT switched
  THEN
    switched := TRUE;
    input.MaxVelocity := input_step2.MaxVelocity;    
    input.TargetPosition := input_step2.TargetPosition;
    input.TargetVelocity := input_step2.TargetVelocity;    
    input.TargetAcceleration := input_step2.TargetAcceleration;
	END_IF
  
  input.CurrentPosition := output.NewPosition;
  input.CurrentVelocity := output.NewVelocity;
  input.CurrentAcceleration := output.NewAcceleration;
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>