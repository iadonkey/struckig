<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="DebuggedExamplesTest" Id="{e15861f7-5c4d-40dd-bbe1-0b0b2e41287f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK DebuggedExamplesTest EXTENDS TcUnit.FB_TestSuite
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Test_Trajectory_HasTargetVelocity_HasTargetAcceleration();


]]></ST>
    </Implementation>
    <Method Name="Test_Trajectory_HasTargetVelocity_HasTargetAcceleration" Id="{53ec57f4-9f8e-4639-b25f-deb391855d1e}">
      <Declaration><![CDATA[METHOD Test_Trajectory_HasTargetVelocity_HasTargetAcceleration
VAR_INST
  ruckig : Struckig.Otg(0.001, 3) := (
  
    Synchronization := SynchronizationType.TimeSync,        
    MaxVelocity := [ 2000.00000000000000000000, 2000.00000000000000000000, 2000.00000000000000000000 ],
    MaxAcceleration := [ 20000.00000000000000000000, 20000.00000000000000000000, 20000.00000000000000000000 ],
    MaxJerk := [ 800000.00000000000000000000, 800000.00000000000000000000, 800000.00000000000000000000 ],
    CurrentPosition := [ -54.94342725690739825950, -71.16344937395382430623, -99.92141940871530891854 ],
    CurrentVelocity := [ 203.04708462957614756306, -87.88615914847480325989, -244.40742200449426491105 ],
    CurrentAcceleration := [ -9414.24830241836389177479, 3433.58972946014000626747, -1048.10905719350193976425 ],
    TargetPosition := [ -30.34627507739200780179, 41.33313071646210801191, 94.47974487226861128875 ],
    TargetVelocity := [ -104.33706621689987059654, -659.36109838358197521302, 811.33117925934993763804 ],
    TargetAcceleration := [ 523.43053514200096287823, 100.75104632855459385610, 320.80199262854853259341 ]
  );
  
  positionExtrema : Struckig.PositionExtremaDesc;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Trajectory_Profile[1]_Step2_TimeVel');

ruckig();

// Check total duration of profiles
AssertEquals_LREAL(Expected := 0.22338925049474450679, Actual := ruckig.Duration, DELTA := 1E-8, Message := 'Duration incorrect');

// Check duration for each phase
positionExtrema := ruckig._profiles[0].positionExtrema();
AssertEquals_LREAL(0.20657109030979783904, positionExtrema.Tmax, 1E-9, message:='Profile[0] Tmax incorrect');
AssertEquals_LREAL(-29.15176131633907630203, positionExtrema.Maximum, 1E-9, message:='Profile[0] maximum incorrect');
AssertEquals_LREAL(0.00000000000000000000, positionExtrema.Tmin, 1E-9, message:='Profile[0] Tmin incorrect');
AssertEquals_LREAL(-54.94342725690739825950, positionExtrema.Minimum, 1E-9, message:='Profile[0] minimum incorrect');

positionExtrema := ruckig._profiles[1].positionExtrema();
AssertEquals_LREAL(0.19826331168683380968, positionExtrema.Tmax, 1E-9, message:='Profile[1] Tmax incorrect');
AssertEquals_LREAL(55.81702313192161568622, positionExtrema.Maximum, 1E-9, message:='Profile[1] maximum incorrect');
AssertEquals_LREAL(0.01113968648909354625, positionExtrema.Tmin, 1E-9, message:='Profile[1] Tmin incorrect');
AssertEquals_LREAL(-71.74511835894615785492, positionExtrema.Minimum, 1E-9, message:='Profile[1] minimum incorrect');

positionExtrema := ruckig._profiles[2].positionExtrema();
AssertEquals_LREAL(0.22338925049474447904, positionExtrema.Tmax, 1E-9, message:='Profile[2] Tmax incorrect');
AssertEquals_LREAL(94.47974487226861128875, positionExtrema.Maximum, 1E-9, message:='Profile[2] maximum incorrect');
AssertEquals_LREAL(0.02606362117094545780, positionExtrema.Tmin, 1E-9, message:='Profile[2] Tmin incorrect');
AssertEquals_LREAL(-104.28684661857214166503, positionExtrema.Minimum, 1E-9, message:='Profile[2] minimum incorrect');
   

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>